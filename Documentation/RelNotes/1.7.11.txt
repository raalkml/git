Git v1.7.11 Release Notes
=========================

Updates since v1.7.10
---------------------

UI, Workflows & Features

 * A new mode for push, "simple", which is a cross between "current"
   and "upstream", has been introduced. "git push" without any refspec
   will push the current branch out to the same name at the remote
   repository only when it is set to track the branch with the same
   name over there.  The plan is to make this mode the new default
   value when push.default is not configured.

 * A third-party tool "git subtree" is distributed in contrib/

 * Error messages given when @{u} is used for a branch without its
   upstream configured have been clatified.

 * Even with "-q"uiet option, "checkout" used to report setting up
   tracking.  Also "branch" learned the "-q"uiet option to squelch
   informational message.

 * The smart-http backend used to always override GIT_COMMITTER_*
   variables with REMOTE_USER and REMOTE_ADDR, but these variables are
   now preserved when set.

 * "include.path" mechanism of the configuration files learned to
   understand "~/path" and "~user/path".

 * "git am" learned the "--include" option, which is an opposite of
   existing the "--exclude" option.

 * When "git am -3" needs to fall back to an application to a
   synthesized preimage followed by a 3-way merge, the paths that
   needed such treatment are now reported to the end user, so that the
   result in them can be eyeballed with extra care.

 * The output from "diff/log --stat" used to always allocate 4 columns
   to show the number of modified lines, but not anymore.

 * The "fmt-merge-msg" command learns to list the primary contributors
   involved in the side topic you are merging.

 * The cases "git push" fails due to non-ff can be broken into three
   categories; each case is given a separate advise message.

 * "git rebase" learned to optionally keep commits that do not
   introduce any change in the original history.

 * "git push --recurse-submodules" learned to optionally look into the
   histories of submodules bound to the superproject and push them
   out.

 * A 'snapshot' request to "gitweb" honors If-Modified-Since: header,
   based on the commit date.

 * "gitweb" learned to highlight the patch it outputs even more.

Foreign Interface

 * "git svn" used to die with unwanted SIGPIPE when talking with HTTP
   server that uses keep-alive.

 * "git svn" learned to use platform specific authentication
   providers, e.g. gnome-keyring, kwallet, etc.

 * "git p4" has been moved out of contrib/ area and has seen more work
   on importing labels as tags from (and exporting tags as labels to)
   p4.

Performance and Internal Implementation (please report possible regressions)

 * An experimental "version 4" format of the index file has been
   introduced to reduce on-disk footprint and I/O overhead.

 * The code to compute hash values for lines used by the internal diff
   engine was optimized on little-endian machines, using the same
   trick the kernel folks came up with.

 * "git apply" had some memory leaks plugged.

 * "git repack" used to write out unreachable objects as loose objects
   when repacking, even if such loose objects will immediately pruned
   due to its age.

 * Setting up a revision traversal with many starting points was
   inefficient as these were placed in a date-order priority queue
   one-by-one.  Now they are collected in the queue unordered first,
   and sorted immediately before getting used.

 * "git rev-parse --show-prefix" used to emit nothing when run at the
   top-level of the working tree, but now it gives a blank line.

 * Minor memory leak during unpack_trees (hence "merge" and "checkout"
   to check out another branch) has been plugged.

 * More lower-level commands learned to use the streaming API to read
   from the object store without keeping everything in core.

 * Because "sh" on the user's PATH may be utterly broken on some
   systems, run-command API now uses SHELL_PATH, not /bin/sh, when
   spawning an external command (not applicable to Windows port).

 * The API to iterate over refs/ hierarchy has been tweaked to allow
   walking only a subset of it more efficiently.

Also contains minor documentation updates and code clean-ups.


Fixes since v1.7.10
-------------------

Unless otherwise noted, all the fixes since v1.7.10 in the maintenance
releases are contained in this release (see release notes to them for
details).

 * When using a Perl script on a system where "perl" found on user's
   $PATH could be ancient or otherwise broken, we allow builders to
   specify the path to a good copy of Perl with $PERL_PATH.  The
   gitweb test forgot to use that Perl when running its test.
   (merge 0754e08 jk/maint-gitweb-test-use-sane-perl later to maint).

 * A contrib script "rerere-train" did not work out of the box unless
   user futzed with her $PATH.
   (merge 53876fc jc/rerere-train later to maint).

 * "log --graph" was not very friendly with "--stat" option and its
   output had line breaks at wrong places.
   (merge bafa16e lp/diffstat-with-graph later to maint).

 * "git config --rename-section" to rename an existing section into a
   bogus one did not check the new name.
   (merge 94a35b1 jk/maint-config-bogus-section later to maint).

 * The test scaffolding for git-daemon was flaky.
   (merge 46e3581 js/daemon-test-race-fix later to maint).

 * The test scaffolding for fast-import was flaky.
   (merge 7fb8e16 pw/t5800-import-race-fix later to maint).

 * Octopus merge strategy did not reduce heads that are recorded in the
   final commit correctly.
   (merge 5802f81 jc/merge-reduce-parents-early later to maint).

 * In the older days, the header "Conflicts:" in "cherry-pick" and
   "merge" was separated by a blank line from the list of paths that
   follow for readability, but when "merge" was rewritten in C, we lost
   it by mistake. Remove the newline from "cherry-pick" to make them
   match again.
   (merge 5112068 rt/cherry-revert-conflict-summary later to maint).

 * The filesystem boundary was not correctly reported when .git
   directory discovery stopped at a mount point.
   (merge 2565b43 cb/maint-report-mount-point-correctly-in-setup later to maint).

 * The command line parser choked "git cherry-pick $name" when $name
   can be both revision name and a pathname, even though $name can
   never be a path in the context of the command.
   (merge 6d5b93f cb/cherry-pick-rev-path-confusion later to maint).

 * HTTP transport that requires authentication did not work correctly
   when multiple connections are used simultaneously.
   (merge 6f4c347 cb/http-multi-curl-auth later to maint).

 * The i18n of error message "git stash save" was not properly done.
   (merge ed3c400 rl/maint-stash-i18n-save-error later to maint).

 * The report from "git fetch" said "new branch" even for a non branch
   ref.
   (merge 0997ada mb/fetch-call-a-non-branch-a-ref later to maint).

 * The "diff --no-index" codepath used limited-length buffers, risking
   pathnames getting truncated.  Update it to use the strbuf API.
   (merge 875b91b jm/maint-strncpy-diff-no-index later to maint).
